The 7-base_geometry.py module
======================

Using the BaseGeometry class
----------------------


>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()
>>> bg.integer_validator("square", 5)
>>> bg.integer_validator("triangle", 3)
>>> bg.integer_validator("", 3)
>>> bg.integer_validator("square", (3))

-------------------------
----ValueError cases-----
-------------------------

>>> bg.integer_validator("kiko", 0)
Traceback (most recent call last):
...
ValueError: kiko must be greater than 0
>>> bg.integer_validator("kiko", -0)
Traceback (most recent call last):
...
ValueError: kiko must be greater than 0
>>> bg.integer_validator("triangulo", -3)
Traceback (most recent call last):
...
ValueError: triangulo must be greater than 0

-------------------------
-----TypeError cases-----
-------------------------

>>> bg.integer_validator("kiko", "kiko")
Traceback (most recent call last):
...
TypeError: kiko must be an integer
>>> bg.integer_validator("kiko", None)
Traceback (most recent call last):
...
TypeError: kiko must be an integer
>>> bg.integer_validator("kiko", 3.9)
Traceback (most recent call last):
...
TypeError: kiko must be an integer
>>> bg.integer_validator("kiko", [1, 2])
Traceback (most recent call last):
...
TypeError: kiko must be an integer
>>> bg.integer_validator("kiko", (1, 3))
Traceback (most recent call last):
...
TypeError: kiko must be an integer
>>> bg.integer_validator("kiko", {3, 45})
Traceback (most recent call last):
...
TypeError: kiko must be an integer
>>> bg.integer_validator("kiko", True)
Traceback (most recent call last):
...
TypeError: kiko must be an integer


---------------------------------


>>> print(bg.area())
Traceback (most recent call last):
...
Exception: area() is not implemented

---------------------------------

>>> bg.integer_validator("kiko", )
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'
